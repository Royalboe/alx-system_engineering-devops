---
- name: Set up server
  hosts: laravelservers
  remote_user: root
  become: yes

  vars:
    acme_challenge_type: http-01
    acme_directory: https://acme-v02.api.letsencrypt.org/directory
    acme_version: 2
    acme_email: auomidejohnson@gmail.com
    acme_terms_agreed: yes
    letsencrypt_dir: /etc/letsencrypt
    letsencrypt_keys_dir: /etc/letsencrypt/keys
    letsencrypt_csrs_dir: /etc/letsencrypt/csrs
    letsencrypt_certs_dir: /etc/letsencrypt/certs
    letsencrypt_account_key: /etc/letsencrypt/account/account.key
    domain_name: royalboe.live
    php_version: 8.1
    repos: "https://github.com/Royalboe/laravel-realworld-example-app.git"
    db_password: "password"

  tasks:
    - name: Upgrade System
      apt: upgrade=dist update_cache=yes
      become: yes

    - name: Ensure some basic tools are installed.
      ansible.builtin.apt:
        name: aptitude,vim,ntp,ca-certificates,htop,rsync,open-vm-tools,gpg,sudo,iproute2,iptables,git,libnss-libvirt
        state: latest

    - name: "Create required directories in /etc/letsencrypt"
      ansible.builtin.file:
        path: "/etc/letsencrypt/{{ item }}"
        state: directory
        owner: root
        group: root
        mode: u=rwx,g=x,o=x
      with_items:
      - account
      - certs
      - csrs
      - keys

    - name: Ensure openssl requirements for lets encrypt are satisfied # Require openssl, PyOpenSSL
      ansible.builtin.apt:
        name: openssl
        state: latest

    - name: Ensure python-openssl requirements are satisified (for a python2 install)
      ansible.builtin.apt:
        name: python-openssl
        state: latest
      when: ansible_python_version is version("3", "lt")
    - name: Ensure python-openssl requirements are satisified (for a python3 install)
      ansible.builtin.apt:
        name: python3-openssl
        state: latest
      when: ansible_python_version is version("3", "ge")

    - name: Generate a Let's Encrypt account key
      community.crypto.openssl_privatekey:
        path: "{{ letsencrypt_account_key }}"
        type: RSA
        size: 4096

    - name: Generate a private key for {{ domain_name }}
      community.crypto.openssl_privatekey:
        path: "{{ letsencrypt_keys_dir }}/{{ domain_name }}.key"
        type: RSA
        size: 4096

    - name: Generate an OpenSSL Certificate Signing Request
      community.crypto.openssl_csr:
        path: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
        privatekey_path: "{{ letsencrypt_keys_dir }}/{{ domain_name }}.key"
        common_name: "{{ domain_name }}"


    - name: Create a challenge for {{ domain_name }} using a account key from a variable.
      community.crypto.acme_certificate:
        terms_agreed: "{{ acme_terms_agreed }}"
        acme_version: "{{ acme_version }}"
        acme_directory: "{{ acme_directory }}"
        account_key_src: "{{ letsencrypt_account_key }}"
        csr: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
        dest: "{{ letsencrypt_certs_dir }}/{{ domain_name }}.crt"
      register: letsencrypt_challenge

    - name: Create the required .well-known structure.
      ansible.builtin.file:
        dest: /var/www/html/myapp/public/.well-known/acme-challenge
        mode: 0755
        state: directory

    - name: Copy the challenge data to the web sever.
      ansible.builtin.copy:
        dest: /var/www/html/myapp/public/{{ letsencrypt_challenge['challenge_data'][domain_name]['http-01']['resource'] }}
        content: "{{ letsencrypt_challenge['challenge_data'][domain_name]['http-01']['resource_value'] }}"
        mode: 0644
      when: letsencrypt_challenge is changed and domain_name in letsencrypt_challenge['challenge_data']

    - name: Create a challenge for {{ domain_name }} using a account key file.
      community.crypto.acme_certificate:
        acme_directory: "{{ acme_directory }}"
        acme_version: "{{ acme_version }}"
        account_key_src: "{{ letsencrypt_account_key }}"
        account_email: "{{ acme_email }}"
        terms_agreed: "{{ acme_terms_agreed }}"
        challenge: "{{ acme_challenge_type }}"
        src: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
        cert: "{{ letsencrypt_certs_dir }}/{{ domain_name }}.crt"
        fullchain_dest: "{{ letsencrypt_certs_dir }}/fullchain_{{ domain_name }}.crt"
        remaining_days: 14
        chain_dest: "{{ letsencrypt_certs_dir }}/{{ domain_name }}-intermediate.crt"
        data: "{{ letsencrypt_challenge }}"
